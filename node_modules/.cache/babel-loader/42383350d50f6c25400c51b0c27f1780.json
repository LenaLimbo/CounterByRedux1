{"ast":null,"code":"const initialState = {\n  counter: 0,\n  result: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        counter: state.counter + 1\n      };\n\n    case 'DECREMENT':\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case 'ADD':\n      return {\n        counter: state.counter + action.value\n      };\n\n    case 'SUB':\n      return {\n        counter: state.counter - action.value\n      };\n\n    case 'ONSTORE':\n      {\n        return {\n          result: state.result.concat(state)\n        };\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/myreactprojects/reduxbasicv1/src/store/reducer.js"],"names":["initialState","counter","result","reducer","state","action","type","value","concat"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAE9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AACHL,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AADtB,OAAP;;AAGJ,SAAK,WAAL;AAAkB,aAAO,EACrB,GAAGG,KADkB;AAErBH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFJ,OAAP;;AAIlB,SAAK,KAAL;AAAY,aAAO;AACfA,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE;AADjB,OAAP;;AAGZ,SAAK,KAAL;AAAY,aAAO;AACfN,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE;AADjB,OAAP;;AAGZ,SAAK,SAAL;AAAgB;AACZ,eAAO;AACHL,UAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaM,MAAb,CAAoBJ,KAApB;AADL,SAAP;AAGH;;AACD;AACI,aAAOA,KAAP;AArBR;;AAwBA,SAAOA,KAAP;AACH,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["const initialState = {\r\n    counter: 0,\r\n    result: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            return {\r\n                counter: state.counter + 1,\r\n            }\r\n        case 'DECREMENT': return {\r\n            ...state,\r\n            counter: state.counter - 1\r\n        }\r\n        case 'ADD': return {\r\n            counter: state.counter + action.value\r\n        }\r\n        case 'SUB': return {\r\n            counter: state.counter - action.value\r\n        }\r\n        case 'ONSTORE': {\r\n            return {\r\n                result: state.result.concat(state)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}