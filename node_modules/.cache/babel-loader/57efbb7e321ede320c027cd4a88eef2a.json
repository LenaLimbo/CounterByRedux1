{"ast":null,"code":"import * as actionType from './action';\nconst initialState = {\n  counter: 0,\n  result: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.INCREMENT:\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case actionType.DECREMENT:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case actionType.ADD:\n      return { ...state,\n        counter: state.counter + action.value\n      };\n\n    case actionType.SUB:\n      return { ...state,\n        counter: state.counter - action.value\n      };\n\n    case actionType.ONSTORE:\n      return { ...state,\n        result: state.result.concat(state.counter)\n      };\n\n    default:\n      return state;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["D:/myreactprojects/reduxbasicv1/src/store/reducer.js"],"names":["actionType","initialState","counter","result","reducer","state","action","type","INCREMENT","DECREMENT","ADD","value","SUB","ONSTORE","concat"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,UAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,CADQ;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAE9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,UAAU,CAACQ,SAAhB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFtB,OAAP;;AAIJ,SAAKF,UAAU,CAACS,SAAhB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAFtB,OAAP;;AAIJ,SAAKF,UAAU,CAACU,GAAhB;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACK;AAF7B,OAAP;;AAIJ,SAAKX,UAAU,CAACY,GAAhB;AACI,aAAO,EACH,GAAGP,KADA;AAEHH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACK;AAF7B,OAAP;;AAIJ,SAAKX,UAAU,CAACa,OAAhB;AACI,aAAO,EACH,GAAGR,KADA;AAEHF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaW,MAAb,CAAoBT,KAAK,CAACH,OAA1B;AAFL,OAAP;;AAKJ;AACI,aAAOG,KAAP;AA5BR;;AA+BA,SAAOA,KAAP;AACH,CAlCD;;AAoCA,eAAeD,OAAf","sourcesContent":["import * as actionType from './action'\r\n\r\nconst initialState = {\r\n    counter: 0,\r\n    result: []\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionType.INCREMENT:\r\n            return {\r\n                ...state,\r\n                counter: state.counter + 1,\r\n            }\r\n        case actionType.DECREMENT:\r\n            return {\r\n                ...state,\r\n                counter: state.counter - 1\r\n            }\r\n        case actionType.ADD:\r\n            return {\r\n                ...state,\r\n                counter: state.counter + action.value\r\n            }\r\n        case actionType.SUB:\r\n            return {\r\n                ...state,\r\n                counter: state.counter - action.value\r\n            }\r\n        case actionType.ONSTORE:\r\n            return {\r\n                ...state,\r\n                result: state.result.concat(state.counter)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}